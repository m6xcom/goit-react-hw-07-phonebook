{"version":3,"sources":["components/pages/RegisterPage/RegisterPage.module.css","components/pages/RegisterPage/RegisterPage.js"],"names":["module","exports","RegisterPage","state","name","email","password","handleChange","e","setState","target","value","onSubmit","preventDefault","props","onRegister","reset","className","style","form","Group","inputGroup","controlId","Label","Control","onChange","this","type","placeholder","Text","variant","Component","mapDispatchToProps","registerUser","connect"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,WAAa,mC,6JCO3DC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAEZC,aAAe,SAACC,GACd,EAAKC,SAAL,eAAiBD,EAAEE,OAAON,KAAOI,EAAEE,OAAOC,S,4CAE5C,WAAU,IAAD,OACP,OACE,eAAC,IAAD,CACEC,SAAU,SAACJ,GACTA,EAAEK,iBACF,EAAKC,MAAMC,WAAW,EAAKZ,OAC3B,EAAKM,SAAS,CAAEL,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAC/CE,EAAEE,OAAOM,SAEXC,UAAWC,IAAMC,KAPnB,UASE,eAAC,IAAKC,MAAN,CAAYH,UAAWC,IAAMG,WAAYC,UAAU,gBAAnD,UACE,cAAC,IAAKC,MAAN,mBACA,cAAC,IAAKC,QAAN,CACEC,SAAUC,KAAKnB,aACfoB,KAAK,OACLvB,KAAK,OACLwB,YAAY,uBAGhB,eAAC,IAAKR,MAAN,CAAYH,UAAWC,IAAMG,WAAYC,UAAU,iBAAnD,UACE,cAAC,IAAKC,MAAN,4BACA,cAAC,IAAKC,QAAN,CACEC,SAAUC,KAAKnB,aACfoB,KAAK,QACLvB,KAAK,QACLwB,YAAY,gBAEd,cAAC,IAAKC,KAAN,CAAWZ,UAAU,aAArB,+DAIF,eAAC,IAAKG,MAAN,CAAYH,UAAWC,IAAMG,WAAYC,UAAU,oBAAnD,UACE,cAAC,IAAKC,MAAN,uBACA,cAAC,IAAKC,QAAN,CACEC,SAAUC,KAAKnB,aACfoB,KAAK,WACLvB,KAAK,WACLwB,YAAY,gBAGhB,cAAC,IAAD,CAAQX,UAAWC,IAAMG,WAAYS,QAAQ,UAAUH,KAAK,SAA5D,6B,GAlDmBI,aA0DrBC,EAAqB,CACzBjB,WAAYkB,KAGCC,sBAAQ,KAAMF,EAAdE,CAAkChC","file":"static/js/7.84346fff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterPage_form__2b4ju\",\"inputGroup\":\"RegisterPage_inputGroup__7GWzt\"};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { registerUser } from \"../../../redux/user/user-operations\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport style from \"./RegisterPage.module.css\";\r\n\r\nclass RegisterPage extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          this.props.onRegister(this.state);\r\n          this.setState({ name: \"\", email: \"\", password: \"\" });\r\n          e.target.reset();\r\n        }}\r\n        className={style.form}\r\n      >\r\n        <Form.Group className={style.inputGroup} controlId=\"formBasicName\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            onChange={this.handleChange}\r\n            type=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Enter your name\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className={style.inputGroup} controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            onChange={this.handleChange}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group className={style.inputGroup} controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            onChange={this.handleChange}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Group>\r\n        <Button className={style.inputGroup} variant=\"primary\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: registerUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterPage);\r\n\r\nRegisterPage.propTypes = {\r\n  onRegister: PropTypes.func,\r\n};\r\n"],"sourceRoot":""}