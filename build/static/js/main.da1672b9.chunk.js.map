{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","components/App/App.js","index.js"],"names":["module","exports","ADDCONTACTREQUEST","createAction","ADDCONTACTSUCCESS","ADDCONTACTERROR","FETCHCONTACTREQUEST","FETCHCONTACTSUCCESS","FETCHCONTACTERROR","DELETECONTACTREQUEST","DELETECONTACTSUCCESS","DELETECONTACTERROR","FILTERCHANGE","items","createReducer","_","payload","console","log","state","filter","el","id","type","loading","contacts","combineReducers","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","axios","defaults","baseURL","getContacts","getFilteredContacts","createSelector","name","toLowerCase","includes","connect","dispatch","addContact","contact","a","post","response","data","nameInput","shortid","generate","numberInput","className","style","form","onSubmit","e","preventDefault","every","target","children","value","number","alert","reset","htmlFor","addContactBtn","filterChange","text","filterInput","title","onChange","ContactsList","componentDidMount","fetchContacts","props","this","deleteContact","map","contactsListItem","onClick","Component","contactId","delete","get","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da1672b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Rofv\",\"addContactBtn\":\"ContactForm_addContactBtn__31clS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__2yCVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"ContactsList_contactsListItem__26k2H\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const ADDCONTACTREQUEST = createAction(\"contacts/addContactRequest\");\r\n\r\nexport const ADDCONTACTSUCCESS = createAction(\"contacts/addContactSuccess\");\r\n\r\nexport const ADDCONTACTERROR = createAction(\"contacts/addContactError\");\r\n\r\nexport const FETCHCONTACTREQUEST = createAction(\"contacts/fetchContactRequest\");\r\n\r\nexport const FETCHCONTACTSUCCESS = createAction(\"contacts/fetchContactSuccess\");\r\n\r\nexport const FETCHCONTACTERROR = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const DELETECONTACTREQUEST = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\n\r\nexport const DELETECONTACTSUCCESS = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\n\r\nexport const DELETECONTACTERROR = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const FILTERCHANGE = createAction(\"contacts/filterChange\");\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  FETCHCONTACTREQUEST,\r\n  FETCHCONTACTERROR,\r\n  FETCHCONTACTSUCCESS,\r\n  ADDCONTACTREQUEST,\r\n  ADDCONTACTSUCCESS,\r\n  ADDCONTACTERROR,\r\n  DELETECONTACTREQUEST,\r\n  DELETECONTACTSUCCESS,\r\n  DELETECONTACTERROR,\r\n  FILTERCHANGE,\r\n} from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [FETCHCONTACTSUCCESS]: (_, { payload }) => {\r\n    return payload;\r\n  },\r\n  [FETCHCONTACTERROR]: (_, { payload }) => {\r\n    console.log(payload);\r\n  },\r\n  [ADDCONTACTSUCCESS]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [ADDCONTACTERROR]: (_, { payload }) => {\r\n    console.log(payload);\r\n  },\r\n  [DELETECONTACTSUCCESS]: (state, { payload }) => {\r\n    return state.filter((el) => el.id !== payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [FILTERCHANGE.type]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(\"\", {\r\n  [ADDCONTACTREQUEST]: () => true,\r\n  [ADDCONTACTSUCCESS]: () => false,\r\n  [ADDCONTACTERROR]: () => false,\r\n  [FETCHCONTACTREQUEST]: () => true,\r\n  [FETCHCONTACTSUCCESS]: () => false,\r\n  [FETCHCONTACTERROR]: () => false,\r\n  [DELETECONTACTREQUEST]: () => true,\r\n  [DELETECONTACTSUCCESS]: () => false,\r\n  [DELETECONTACTERROR]: () => false,\r\n});\r\n\r\nexport const contacts = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { contacts } from \"./contacts/contacts-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contacts },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport {\r\n  ADDCONTACTREQUEST,\r\n  ADDCONTACTSUCCESS,\r\n  ADDCONTACTERROR,\r\n  FETCHCONTACTREQUEST,\r\n  FETCHCONTACTERROR,\r\n  FETCHCONTACTSUCCESS,\r\n  DELETECONTACTREQUEST,\r\n  DELETECONTACTSUCCESS,\r\n  DELETECONTACTERROR,\r\n} from \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(FETCHCONTACTREQUEST());\r\n  try {\r\n    const response = await axios.get(\"/contacts\");\r\n    const data = await response.data;\r\n\r\n    dispatch(FETCHCONTACTSUCCESS(data));\r\n  } catch (error) {\r\n    dispatch(FETCHCONTACTERROR(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (contact) => async (dispatch) => {\r\n  dispatch(ADDCONTACTREQUEST());\r\n  try {\r\n    const response = await axios.post(\"/contacts\", contact);\r\n    const data = await response.data;\r\n\r\n    dispatch(ADDCONTACTSUCCESS(data));\r\n  } catch (error) {\r\n    dispatch(ADDCONTACTERROR(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  dispatch(DELETECONTACTREQUEST());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(DELETECONTACTSUCCESS(id));\r\n  } catch (error) {\r\n    dispatch(DELETECONTACTERROR(error));\r\n  }\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getFilter, getContacts],\r\n  (filter, contacts) =>\r\n    contacts.filter((el) => el.name.toLowerCase().includes(filter))\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nconst ContactForm = ({ contacts, addContact }) => {\r\n  const nameInput = shortid.generate();\r\n  const numberInput = shortid.generate();\r\n  return (\r\n    <form\r\n      className={style.form}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        if (\r\n          contacts.every(\r\n            (el) =>\r\n              el.name.toLowerCase() !==\r\n              e.target.children.name.value.toLowerCase()\r\n          )\r\n        ) {\r\n          addContact({\r\n            id: shortid.generate(),\r\n            name: e.target.children.name.value,\r\n            number: e.target.children.number.value,\r\n          });\r\n        } else {\r\n          alert(`${e.target.children.name.value} is already in contacts.`);\r\n        }\r\n        e.target.reset();\r\n      }}\r\n    >\r\n      <label htmlFor={nameInput}>Name</label>\r\n      <input id={nameInput} name=\"name\" type=\"text\"></input>\r\n      <label htmlFor={numberInput}>Number</label>\r\n      <input id={numberInput} name=\"number\" type=\"tel\"></input>\r\n      <button className={style.addContactBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (contact) => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    })\r\n  ),\r\n  addContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FILTERCHANGE } from \"../../redux/contacts/contacts-actions\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filterChange }) => {\r\n  const filterInput = shortid.generate();\r\n  return (\r\n    <>\r\n      <label className={style.title} htmlFor={filterInput}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        id={filterInput}\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          filterChange(e.target.value.toLowerCase());\r\n        }}\r\n        name=\"filter\"\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filterChange: (text) => dispatch(FILTERCHANGE(text)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  filterChange: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  fetchContacts,\r\n  deleteContact,\r\n} from \"../../redux/contacts/contacts-operations\";\r\nimport { getFilteredContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport style from \"./ContactsList.module.css\";\r\n\r\nclass ContactsList extends Component {\r\n  componentDidMount = () => {\r\n    const { fetchContacts } = this.props;\r\n    fetchContacts();\r\n  };\r\n  render() {\r\n    const { contacts, deleteContact } = this.props;\r\n    return (\r\n      <ul>\r\n        {contacts.map((el) => {\r\n          return (\r\n            <li className={style.contactsListItem} key={el.id}>\r\n              <p>\r\n                {el.name} : {el.number}\r\n              </p>\r\n              <button onClick={() => deleteContact(el.id)}>Delete</button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteContact: (contactId) => dispatch(deleteContact(contactId)),\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    })\r\n  ),\r\n  deleteContact: PropTypes.func,\r\n  fetchContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport ContactsList from \"../ContactsList/ContactsList\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h2>Phonebook</h2>\r\n      <ContactForm />\r\n      <h2 className=\"contactsTitle\">Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport store from \"./redux/store\";\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}